{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./src/background.js","webpack:///external \"electron\"","webpack:///external \"path\"","webpack:///external \"url\""],"names":["app","BrowserWindow","desktopCapturer","require","URL","path","mainWindow","createWindow","width","height","webPreferences","nodeIntegration","preload","join","getAppPath","show","maximize","loadURL","on","e","window","setMenu","process","platform","quit","global"],"mappings":";QAAA;QACA;;QAEA;QACA;;QAEA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;;QAEA;QACA;;QAEA;QACA;;QAEA;QACA;QACA;;;QAGA;QACA;;QAEA;QACA;;QAEA;QACA;QACA;QACA,0CAA0C,gCAAgC;QAC1E;QACA;;QAEA;QACA;QACA;QACA,wDAAwD,kBAAkB;QAC1E;QACA,iDAAiD,cAAc;QAC/D;;QAEA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA,yCAAyC,iCAAiC;QAC1E,gHAAgH,mBAAmB,EAAE;QACrI;QACA;;QAEA;QACA;QACA;QACA,2BAA2B,0BAA0B,EAAE;QACvD,iCAAiC,eAAe;QAChD;QACA;QACA;;QAEA;QACA,sDAAsD,+DAA+D;;QAErH;QACA;;;QAGA;QACA;;;;;;;;;;;;AClFA;AACA,MAAM;AAAEA,KAAF;AAAOC,eAAP;AAAsBC;AAAtB,IAA0CC,mBAAO,CAAC,0BAAD,CAAvD;;AACA,MAAMC,GAAG,GAAGD,mBAAO,CAAC,gBAAD,CAAP,CAAeC,GAA3B;;AACA,MAAMC,IAAI,GAAGF,mBAAO,CAAC,kBAAD,CAApB,C,CACA;AACA;;;AACA,IAAIG,UAAJ;;AAEA,SAASC,YAAT,GAAwB;AACtB;AACAD,YAAU,GAAG,IAAIL,aAAJ,CAAkB;AAC7BO,SAAK,EAAE,GADsB;AAE7BC,UAAM,EAAE,GAFqB;AAG7BC,kBAAc,EAAE;AACdC,qBAAe,EAAE,IADH;AAEdC,aAAO,EAAEP,IAAI,CAACQ,IAAL,CAAUb,GAAG,CAACc,UAAJ,EAAV,EAA4B,aAA5B;AAFK,KAHa;AAO7BC,QAAI,EAAE;AAPuB,GAAlB,CAAb;AASAT,YAAU,CAACU,QAAX;AACAV,YAAU,CAACS,IAAX,GAZsB,CAatB;AACA;;AACAT,YAAU,CAACW,OAAX,CAAmB,8BAAnB,EAfsB,CAiBtB;AACA;AAEA;;AACAX,YAAU,CAACY,EAAX,CAAc,QAAd,EAAwB,YAAY;AAClC;AACA;AACA;AACAZ,cAAU,GAAG,IAAb;AACD,GALD;AAMD,C,CACD;AACA;AACA;;;AACAN,GAAG,CAACkB,EAAJ,CAAO,OAAP,EAAgBX,YAAhB;AAEAP,GAAG,CAACkB,EAAJ,CAAO,wBAAP,EAAiC,UAAUC,CAAV,EAAaC,MAAb,EAAqB;AACpDA,QAAM,CAACC,OAAP,CAAe,IAAf;AACD,CAFD,E,CAKA;;AACArB,GAAG,CAACkB,EAAJ,CAAO,mBAAP,EAA4B,YAAY;AACtC;AACA;AACA,MAAII,OAAO,CAACC,QAAR,KAAqB,QAAzB,EAAmCvB,GAAG,CAACwB,IAAJ;AACpC,CAJD;AAMAxB,GAAG,CAACkB,EAAJ,CAAO,UAAP,EAAmB,YAAY;AAC7B;AACA;AACA,MAAIZ,UAAU,KAAK,IAAnB,EAAyBC,YAAY;AACtC,CAJD,E,CAMA;AACA;;AACAkB,MAAM,CAACvB,eAAP,GAAyBA,eAAzB,C;;;;;;;;;;;AC7DA,qC;;;;;;;;;;;ACAA,iC;;;;;;;;;;;ACAA,gC","file":"background.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = \"./src/background.js\");\n","// Modules to control application life and create native browser window\r\nconst { app, BrowserWindow, desktopCapturer } = require('electron')\r\nconst URL = require('url').URL\r\nconst path = require('path')\r\n// Keep a global reference of the window object, if you don't, the window will\r\n// be closed automatically when the JavaScript object is garbage collected.\r\nlet mainWindow\r\n\r\nfunction createWindow() {\r\n  // Create the browser window.\r\n  mainWindow = new BrowserWindow({\r\n    width: 800,\r\n    height: 700,\r\n    webPreferences: {\r\n      nodeIntegration: true,\r\n      preload: path.join(app.getAppPath(), '/app/app.js')\r\n    },\r\n    show: false\r\n  })\r\n  mainWindow.maximize();\r\n  mainWindow.show();\r\n  //xporpoise.startServer();\r\n  // and load the index.html of the app.\r\n  mainWindow.loadURL('https://muvr.xyz/app/caster/');\r\n\r\n  // Open the DevTools.\r\n  //mainWindow.webContents.openDevTools()\r\n\r\n  // Emitted when the window is closed.\r\n  mainWindow.on('closed', function () {\r\n    // Dereference the window object, usually you would store windows\r\n    // in an array if your app supports multi windows, this is the time\r\n    // when you should delete the corresponding element.\r\n    mainWindow = null\r\n  })\r\n}\r\n// This method will be called when Electron has finished\r\n// initialization and is ready to create browser windows.\r\n// Some APIs can only be used after this event occurs.\r\napp.on('ready', createWindow)\r\n\r\napp.on('browser-window-created', function (e, window) {\r\n  window.setMenu(null);\r\n});\r\n\r\n\r\n// Quit when all windows are closed.\r\napp.on('window-all-closed', function () {\r\n  // On macOS it is common for applications and their menu bar\r\n  // to stay active until the user quits explicitly with Cmd + Q\r\n  if (process.platform !== 'darwin') app.quit()\r\n})\r\n\r\napp.on('activate', function () {\r\n  // On macOS it's common to re-create a window in the app when the\r\n  // dock icon is clicked and there are no other windows open.\r\n  if (mainWindow === null) createWindow()\r\n})\r\n\r\n// In this file you can include the rest of your app's specific main process\r\n// code. You can also put them in separate files and require them here.\r\nglobal.desktopCapturer = desktopCapturer;","module.exports = require(\"electron\");","module.exports = require(\"path\");","module.exports = require(\"url\");"],"sourceRoot":""}